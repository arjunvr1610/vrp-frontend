version: '3.8'

services:

  react-ui:
    image: node:16-alpine
    working_dir: /opt/react_app
    command: npm start
    ports:
      - "80:3000"
    stdin_open: true
    volumes:
      - .:/opt/react_app
      # # bind-mounting these two files in will let you add packages during development without rebuilding
      # # for example, to add bower to your app while developing, just install it inside the container
      # # and then nodemon will restart. Your changes will last until you "docker-compose down" and will
      # # be saved on host for next build
      # # NOTE: this won't work on Docker Toolbox (virtualbox) which doesn't bind-mount single files
      # # docker-compose exec node npm install --save bower
      # - ./package.json:/opt/react_app/package.json
      # - ./package-lock.json:/opt/react_app/package-lock.json
      # # this is a workaround to prevent host node_modules from accidently getting mounted in container
      # # in case you want to use node/npm both outside container for test/lint etc. and also inside container
      # # this will overwrite the default node_modules dir in container so it won't conflict with our
      # # /opt/node_app/node_modules location. Thanks to PR from @brnluiz
      # - notused:/opt/react_app/node_modules
    environment:
      - NODE_ENV=development
      - WDS_SOCKET_PORT=0
      - PATH=/opt/react_app/node_modules/.bin:$PATH

# volumes:
#   notused: